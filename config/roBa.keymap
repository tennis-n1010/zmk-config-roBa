#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; }; // ダブルクリックに必要な時間を設定
/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        command+lshift {
            bindings = <&kp LG(LSHFT)>;
            key-positions = <35 22>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <8 7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro_left_click: macro_left_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp LCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp LCLK>,
                <&macro_tap>,
                <&tog_off 1 &sl 1>;

            label = "MACRO_LEFT_CLICK";
        };

        macro_middle_click: macro_middle_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp MCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK>,
                <&macro_tap>,
                <&tog_off 1 &sl 1>;

            label = "MACRO_MIDDLE_CLICK";
        };

        macro_right_click: macro_right_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp RCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp RCLK>,
                <&macro_tap>,
                <&tog_off 1 &sl 1>;

            label = "MACRO_RIGHT_CLICK";
        };

        mo3_force0: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3 &tog_off 1>;

            label = "NEW_MACRO";
        };

        mo4_force0: mo4_force0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 4 &tog_off 1>;

            label = "MO4_FORCE0";
        };

        mo2_force0: mo2_force0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2 &tog_off 1>;

            label = "MO2_FORCE0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R  &kp T                                &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F  &kp G  &trans           &trans       &kp H            &kp J  &kp K      &kp L    &kp ENTER
&kp Z      &kp X         &kp C         &kp V  &kp B  &trans           &trans       &kp N            &kp M  &kp COMMA  &kp DOT  &mo 6
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mo 2  &mo 3  &lt 4 SPACE      &lt 4 SPACE  &lt 3 BACKSPACE                             &lt 2 ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                                &to_layer_0 Y  &to_layer_0 U      &to_layer_0 I        &to_layer_0 O       &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans           &trans       &to_layer_0 H  &macro_left_click  &macro_middle_click  &macro_right_click  &to_layer_0 RETURN
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans           &trans       &to_layer_0 N  &mkp MB4           &to_layer_0 COMMA    &mkp MB5            &mo 3
&kp LCTRL      &kp LEFT_GUI   &kp LEFT_ALT   &mo2_force0    &mo3_force0    &mo4_force0      &mo4_force0  &mo3_force0                                                                &mo2_force0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp TAB           &trans        &kp UP_ARROW    &trans     &trans                      &trans  &trans     &trans     &trans     &trans
&kp CAPS          &kp LEFT      &kp DOWN_ARROW  &kp RIGHT  &trans  &trans      &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&kp LEFT_SHIFT    &trans        &trans          &trans     &trans  &trans      &trans  &trans  &mkp MB4   &trans     &mkp MB5   &trans
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT    &trans     &trans  &trans      &trans  &trans                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM_FUNCTION {
            bindings = <
&kp F1            &kp F2        &kp F3        &kp F4   &kp F13                      &kp KP_NUMLOCK   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS
&kp F5            &kp F6        &kp F7        &kp F8   &kp F14  &trans      &trans  &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS
&kp F9            &kp F10       &kp F11       &kp F12  &kp F15  &trans      &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp ASTERISK
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &trans   &trans   &trans      &trans  &trans                                                              &kp SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                      &kp CARET      &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &trans     &trans      &trans       &trans      &trans  &kp MINUS      &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH
&trans           &trans       &trans     &trans      &trans       &trans      &trans  &kp SEMICOLON  &kp SQT        &kp PERIOD        &kp SLASH             &kp RIGHT_SHIFT
&to 5            &trans       &trans     &trans      &trans       &trans      &trans  &trans                                                                &to 5
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &trans        &out OUT_BLE  &out OUT_USB  &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bt BT_CLR    &bt BT_CLR    &bt BT_CLR    &bt BT_CLR    &bt BT_CLR    &trans
&to 6   &trans  &trans  &trans  &trans  &to 0       &to 0         &trans                                                  &to 6
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&to 7   &trans  &trans  &trans  &trans  &to 0       &to 0   &trans                          &to 7
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bootloader  &sys_reset  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans       &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans       &trans      &trans  &trans  &trans
&to 5   &trans  &trans  &trans  &trans  &to 0       &to 0        &trans                                   &to 5
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
